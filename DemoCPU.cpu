#cpudef "DemoCPU"
{
	#bits 8
	
	#tokendef reg
	{
		r0 = 0
		r1 = 1
		r2 = 2
		r3 = 3
		r4 = 4
		r5 = 5
		r6 = 6
		r7 = 7
	}
	
	#tokendef jump
	{
		JNE = 0
		JL = 1
		JG = 2
		JE = 3
		JC = 4
		JB = 5
		JF = 6
		JT = 7
	}
	
	#tokendef alu
	{
		ADD = 17
		SUB = 18
		NEG = 19
		INC = 20
		DEC = 21
		MUL = 22
		AND = 23
		NAND = 24
		OR = 25
		NOR = 26
		NOT = 27
		XOR = 28
		SHR = 29
		SHL = 30
		CMP = 31
	}
	
	NOP				-> 0x00
	LD	acc, {imm8}		-> 0x01 @ imm8[7:0]
	ST	[{imm16}], out		-> 0x02
	LD	acc, [{imm16}]		-> 0x03 @ imm16[7:0] @ imm16[15:8]
	MOV	acc, out		-> 0x04
	
	JMP	{imm16}			-> 0x07 @ imm16[7:0] @ imm16[15:8]
	
	LD	{rX : reg}, {imm8}	-> (0x08 | rX[2:0])[7:0] @ imm8[7:0]
	LD	{rX : reg}, [{imm16}]	-> (0x10 | rX[2:0])[7:0] @ imm16[7:0] @ imm16[15:8]
	MOV	{rX : reg}, out		-> (0x18 | rX[2:0])[7:0]
	MOV	acc, {rX : reg}		-> (0x20 | rX[2:0])[7:0]
	ST	[{imm16}], {rX : reg}	-> (0x28 | rX[2:0])[7:0] @ imm16[7:0] @ imm16[15:8]
	{cond : jump}	{imm16}		-> (0x30 | cond[2:0])[7:0] @ imm16[7:0] @ imm16[15:8]
	
	{aop : alu}	{rX : reg}	-> aop[4:0] @ rX[2:0]
}
